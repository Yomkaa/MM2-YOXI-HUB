-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")
local VirtualInputManager = game:GetService("VirtualInputManager")
local GuiService = game:GetService("GuiService")

local player = Players.LocalPlayer

-- Nothing Library UI Setup
local NothingLibrary = loadstring(game:HttpGetAsync('https://raw.githubusercontent.com/3345-c-a-t-s-u-s/NOTHING/main/source.lua'))();
local Notification = NothingLibrary.Notification();

Notification.new({
    Title = "THX FOR USING YOXI HUB",
    Description = "Telegram: @YomkaMadeIt",
    Duration = 5,
    Icon = "rbxassetid://82898985676372"
})

local Windows = NothingLibrary.new({
    Title = "YOXI HUB | MURDER MYSTERY 2",
    Description = "Made by: Yomka | Telegram - @YomkaMadeIt",
    Keybind = Enum.KeyCode.B,
    Logo = 'http://www.roblox.com/asset/?id=82898985676372'
})

-- Tabs
local InfoTab = Windows:NewTab({
    Title = "Info",
    Description = "Information",
    Icon = "rbxassetid://82898985676372"
})

local MainTab = Windows:NewTab({
    Title = "Main",
    Description = "Main Features",
    Icon = "rbxassetid://82898985676372"
})

local EspTab = Windows:NewTab({
    Title = "Esp",
    Description = "ESP Features",
    Icon = "rbxassetid://82898985676372"
})

local PlayerTab = Windows:NewTab({
    Title = "Player",
    Description = "Player Modifications",
    Icon = "rbxassetid://82898985676372"
})

local MiscTab = Windows:NewTab({
    Title = "Misc",
    Description = "Miscellaneous",
    Icon = "rbxassetid://82898985676372"
})

-- Info Section
local InfoSection = InfoTab:NewSection({
    Title = "Information",
    Icon = "rbxassetid://82898985676372",
    Position = "Left"
})

InfoSection:NewTitle('Made by: Yomka')
InfoSection:NewTitle('Telegram: @YomkaMadeIt')
InfoSection:NewTitle('GUI Toggle - B')
InfoSection:NewButton({
    Title = "Join Telegram",
    Callback = function()
        setclipboard("https://t.me/YomkaMadeIt")
        Notification.new({
            Title = "Link Copied",
            Description = "Telegram channel link copied to clipboard!",
            Duration = 5,
            Icon = "rbxassetid://82898985676372"
        })
    end,
})

-- Сервисы
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local HttpService = game:GetService("HttpService")
local Camera = workspace.CurrentCamera

local player = Players.LocalPlayer

-- Флаги и настройки
local flags = {
    noClip = false,
    espMurder = false,
    espSheriff = false,
    espPlayers = false,
    walkspeedEnabled = false,
    autoKillAll = false,
    aimSheriffGun = false, -- оставлен для совместимости UI, но автопострел отключён
    tracerMurder = false,
    tracerSheriff = false,
    tracerPlayers = false,
}

local walkspeedValue = 16

-- ESP настройки
local espColors = {
    Murder = {outline = Color3.new(1,1,1), fill = Color3.new(1,0,0)},
    Sheriff = {outline = Color3.new(1,1,1), fill = Color3.new(0,0,1)},
    Player = {outline = Color3.new(1,1,1), fill = Color3.new(0,1,0)},
}

local espModels = {}

-- Таблица для хранения предыдущих позиций игроков
local previousPositions = {}

-- Функция для определения типа игрока
local function getPlayerType(p)
    if p.Character then
        for _, tool in pairs(p.Backpack:GetChildren()) do
            if tool:IsA("Tool") then
                if tool.Name == "Knife" then return "Murder"
                elseif tool.Name == "Gun" then return "Sheriff"
                end
            end
        end
        local tool = p.Character:FindFirstChildOfClass("Tool")
        if tool then
            if tool.Name == "Knife" then return "Murder"
            elseif tool.Name == "Gun" then return "Sheriff"
            end
        end
    end
    return "Player"
end

-- Функция для удаления ESP
local function removeEsp(model)
    if not model then return end
    if model:FindFirstChild("TAOWARE_Highlight") then
        model.TAOWARE_Highlight:Destroy()
    end
    if model:FindFirstChild("TAOWARE_Billboard") then
        model.TAOWARE_Billboard:Destroy()
    end
    for i = #espModels, 1, -1 do
        local esp = espModels[i]
        if esp.model == model then
            table.remove(espModels, i)
            break
        end
    end
end

-- Функция для создания или обновления ESP
local function updateEsp(p)
    if not p.Character then return end
    local type = getPlayerType(p)
    local shouldHaveEsp
    if type == "Player" then
        shouldHaveEsp = flags.espPlayers
    else
        shouldHaveEsp = flags["esp" .. type]
    end
    removeEsp(p.Character) -- Удаляем старый, если есть
    if shouldHaveEsp then
        local color = espColors[type]
        if color then
            local highlight = Instance.new("Highlight")
            highlight.Name = "TAOWARE_Highlight"
            highlight.FillColor = color.fill
            highlight.OutlineColor = color.outline
            highlight.FillTransparency = 0.5
            highlight.OutlineTransparency = 0
            highlight.Parent = p.Character

            local head = p.Character:FindFirstChild("Head") or p.Character:FindFirstChild("HumanoidRootPart")
            if head then
                local billboard = Instance.new("BillboardGui")
                billboard.Name = "TAOWARE_Billboard"
                billboard.Adornee = head
                billboard.Size = UDim2.new(0, 200, 0, 50)
                billboard.StudsOffset = Vector3.new(0, 2, 0)
                billboard.AlwaysOnTop = true
                billboard.Parent = p.Character

                local nicknameLabel = Instance.new("TextLabel")
                nicknameLabel.Size = UDim2.new(1, 0, 0.33, 0)
                nicknameLabel.Position = UDim2.new(0, 0, 0, 0)
                nicknameLabel.BackgroundTransparency = 1
                nicknameLabel.Text = p.Name
                nicknameLabel.Font = Enum.Font.SourceSansBold
                nicknameLabel.TextColor3 = color.fill
                nicknameLabel.TextSize = 14
                nicknameLabel.TextStrokeTransparency = 0.6
                nicknameLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
                nicknameLabel.Parent = billboard

                local hpLabel = Instance.new("TextLabel")
                hpLabel.Size = UDim2.new(1, 0, 0.33, 0)
                hpLabel.Position = UDim2.new(0, 0, 0.33, 0)
                hpLabel.BackgroundTransparency = 1
                hpLabel.Text = "HP: N/A"
                hpLabel.Font = Enum.Font.SourceSansBold
                hpLabel.TextColor3 = color.fill
                hpLabel.TextSize = 14
                hpLabel.TextStrokeTransparency = 0.6
                hpLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
                hpLabel.Parent = billboard

                local typeLabel = Instance.new("TextLabel")
                typeLabel.Size = UDim2.new(1, 0, 0.33, 0)
                typeLabel.Position = UDim2.new(0, 0, 0.66, 0)
                typeLabel.BackgroundTransparency = 1
                typeLabel.Text = type
                typeLabel.Font = Enum.Font.SourceSansBold
                typeLabel.TextColor3 = color.fill
                typeLabel.TextSize = 14
                typeLabel.TextStrokeTransparency = 0.6
                typeLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
                typeLabel.Parent = billboard

                table.insert(espModels, {
                    model = p.Character,
                    hpLabel = hpLabel,
                    nicknameLabel = nicknameLabel,
                    typeLabel = typeLabel
                })
            end
        end
    end
end

-- Периодическая проверка типа игрока и обновление ESP каждые 3 секунды (оптимизировано)
spawn(function()
    while true do
        if flags.espMurder or flags.espSheriff or flags.espPlayers then
            for _, p in pairs(Players:GetPlayers()) do
                if p ~= player and p.Character then
                    updateEsp(p)
                end
            end
        end
        task.wait(3) -- Увеличено с 2 сек для меньше нагрузки
    end
end)

-- Обработка новых игроков
Players.PlayerAdded:Connect(function(p)
    if p ~= player then
        p.CharacterAdded:Connect(function(char)
            updateEsp(p)
        end)
    end
end)

-- Очистка при уходе игрока
Players.PlayerRemoving:Connect(function(p)
    removeEsp(p.Character)
end)

-- Update ESP labels (hp/nick/type) loop
task.spawn(function()
    while true do
        for i = #espModels, 1, -1 do
            local esp = espModels[i]
            local model = esp.model
            if model and model.Parent then
                local p = Players:GetPlayerFromCharacter(model)
                if not p then
                    removeEsp(model)
                    continue
                end
                local humanoid = model:FindFirstChild("Humanoid")
                if humanoid and esp.hpLabel then
                    esp.hpLabel.Text = "HP: " .. math.floor(humanoid.Health)
                end
                if p and esp.nicknameLabel and esp.typeLabel then
                    esp.nicknameLabel.Text = p.Name
                    local type = getPlayerType(p)
                    esp.typeLabel.Text = type
                end
            else
                table.remove(espModels, i)
            end
        end
        task.wait(1) -- Увеличено с 0.5 сек
    end
end)

-- Обновление движения игрока
RunService.RenderStepped:Connect(function(dt)
    if flags.walkspeedEnabled and player.Character and player.Character:FindFirstChild("Humanoid") then
        player.Character.Humanoid.WalkSpeed = walkspeedValue
    end
end)

-- Поток для обновления предыдущих позиций игроков
spawn(function()
    while true do
        for _, p in pairs(Players:GetPlayers()) do
            if p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
                local hrp = p.Character.HumanoidRootPart
                previousPositions[p] = {position = hrp.Position, time = tick()}
            end
        end
        task.wait(0.1) -- Увеличено с 0.01 сек для меньше нагрузки
    end
end)

-- Функция для предсказания положения игрока с улучшенной точностью
local function getPredictedPosition(p)
    if not p.Character or not p.Character:FindFirstChild("HumanoidRootPart") then
        return nil
    end
    local hrp = p.Character.HumanoidRootPart
    local currentPosition = hrp.Position
    local currentTime = tick()
    if previousPositions[p] then
        local prev = previousPositions[p]
        local dt = currentTime - prev.time
        if dt > 0 then
            local velocity = (currentPosition - prev.position) / dt
            local predictionTime = 0.1
            local predictedPos = currentPosition + velocity * predictionTime
            if p.Character.Humanoid.Jump then
                predictedPos = predictedPos + Vector3.new(0, 3, 0)
            end
            local acceleration = velocity / dt
            predictedPos = predictedPos + 0.5 * acceleration * (predictionTime ^ 2)
            return predictedPos
        end
    end
    return currentPosition
end

-- Функция флинга для "Fling Murder"
local function SkidFling(TargetPlayer)
    local Character = player.Character
    local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
    local RootPart = Humanoid and Humanoid.RootPart
    local TCharacter = TargetPlayer.Character
    local THumanoid = TCharacter and TCharacter:FindFirstChildOfClass("Humanoid")
    local TRootPart = THumanoid and THumanoid.RootPart
    local THead = TCharacter and TCharacter:FindFirstChild("Head")
    local Accessory = TCharacter and TCharacter:FindFirstChildOfClass("Accessory")
    local Handle = Accessory and Accessory:FindFirstChild("Handle")

    if Character and Humanoid and RootPart then
        if RootPart.Velocity.Magnitude < 50 then
            getgenv().OldPos = RootPart.CFrame
            getgenv().FPDH = workspace.FallenPartsDestroyHeight
        end

        if THumanoid and THumanoid.Sit then
            Notification.new({
                Title = "Error",
                Description = "Target is sitting",
                Duration = 5,
                Icon = "rbxassetid://82898985676372"
            })
            return
        end

        if THead then
            workspace.CurrentCamera.CameraSubject = THead
        elseif Handle then
            workspace.CurrentCamera.CameraSubject = Handle
        else
            workspace.CurrentCamera.CameraSubject = THumanoid
        end

        if not TCharacter:FindFirstChildWhichIsA("BasePart") then
            return
        end

        local function FPos(BasePart, Pos, Ang)
            RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang
            Character:SetPrimaryPartCFrame(CFrame.new(BasePart.Position) * Pos * Ang)
            RootPart.Velocity = Vector3.new(9e7, 9e7 * 10, 9e7)
            RootPart.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
        end

        local function SFBasePart(BasePart)
            local TimeToWait = 2
            local Time = tick()
            local Angle = 0
            repeat
                if RootPart and THumanoid then
                    if BasePart.Velocity.Magnitude < 50 then
                        Angle = Angle + 100
                        FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(2.25, 1.5, -2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(-2.25, -1.5, 2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection, CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection, CFrame.Angles(math.rad(Angle), 0, 0))
                        task.wait()
                    else
                        FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, -1.5, -THumanoid.WalkSpeed), CFrame.Angles(0, 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, -1.5, -TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(0, 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(90), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, -1.5 ,0), CFrame.Angles(math.rad(-90), 0, 0))
                        task.wait()
                        FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                        task.wait()
                    end
                else
                    break
                end
            until BasePart.Velocity.Magnitude > 500 or BasePart.Parent ~= TargetPlayer.Character or TargetPlayer.Parent ~= Players or not TargetPlayer.Character == TCharacter or THumanoid.Sit or Humanoid.Health <= 0 or tick() > Time + TimeToWait
        end

        workspace.FallenPartsDestroyHeight = 0/0

        local BV = Instance.new("BodyVelocity")
        BV.Name = "EpixVel"
        BV.Parent = RootPart
        BV.Velocity = Vector3.new(9e8, 9e8, 9e8)
        BV.MaxForce = Vector3.new(1/0, 1/0, 1/0)

        Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)

        if TRootPart and THead then
            if (TRootPart.CFrame.p - THead.CFrame.p).Magnitude > 5 then
                SFBasePart(THead)
            else
                SFBasePart(TRootPart)
            end
        elseif TRootPart and not THead then
            SFBasePart(TRootPart)
        elseif not TRootPart and THead then
            SFBasePart(THead)
        elseif not TRootPart and not THead and Accessory and Handle then
            SFBasePart(Handle)
        else
            Notification.new({
                Title = "Error",
                Description = "Target is missing everything",
                Duration = 5,
                Icon = "rbxassetid://82898985676372"
            })
            return
        end

        BV:Destroy()
        Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
        workspace.CurrentCamera.CameraSubject = Humanoid

        repeat
            RootPart.CFrame = getgenv().OldPos * CFrame.new(0, .5, 0)
            Character:SetPrimaryPartCFrame(getgenv().OldPos * CFrame.new(0, .5, 0))
            Humanoid:ChangeState("GettingUp")
            for _, x in pairs(Character:GetChildren()) do
                if x:IsA("BasePart") then
                    x.Velocity, x.RotVelocity = Vector3.new(), Vector3.new()
                end
            end
            task.wait()
        until (RootPart.Position - getgenv().OldPos.p).Magnitude < 25

        workspace.FallenPartsDestroyHeight = getgenv().FPDH
    else
        Notification.new({
            Title = "Error",
            Description = "Random error",
            Duration = 5,
            Icon = "rbxassetid://82898985676372"
        })
    end
end

-- **Исправленная функция Auto Kill All**
local autoKillAllThread = nil
local weldedConstraints = {}
local frozenParts = {}

-- Функция проверки наличия ножа
local function hasKnife()
    return player.Backpack:FindFirstChild("Knife") or (player.Character and player.Character:FindFirstChild("Knife"))
end

local function autoKillAllFunction()
    local lastTeleportTime = 0
    while flags.autoKillAll do
        if hasKnife() then
            local knife = player.Backpack:FindFirstChild("Knife") or (player.Character and player.Character:FindFirstChild("Knife"))
            if knife and knife.Parent == player.Backpack and player.Character then
                local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    humanoid:EquipTool(knife)
                end
            end
            if knife and knife:IsDescendantOf(player.Character) then
                local stabRemote = knife:FindFirstChild("Stab")
                if stabRemote then
                    stabRemote:FireServer("Down")
                end
            end
            -- Телепортация игроков каждые 2 секунды
            if tick() - lastTeleportTime > 2 then
                lastTeleportTime = tick()
                local myChar = player.Character
                local myHRP = myChar and myChar:FindFirstChild("HumanoidRootPart")
                if myHRP then
                    for _, other in pairs(Players:GetPlayers()) do
                        if other ~= player and other.Character then
                            local hrp = other.Character:FindFirstChild("HumanoidRootPart")
                            if hrp then
                                hrp.CFrame = myHRP.CFrame * CFrame.new(0, 0, -2) -- Перед игроком
                                frozenParts[other] = {}
                                for _, part in pairs(other.Character:GetDescendants()) do
                                    if part:IsA("BasePart") then
                                        part.Anchored = true
                                        part.CanCollide = false
                                        table.insert(frozenParts[other], part)
                                    end
                                end
                                local weld = Instance.new("WeldConstraint")
                                weld.Part0 = hrp
                                weld.Part1 = myHRP
                                weld.Parent = hrp
                                weldedConstraints[other] = weld
                            end
                        end
                    end
                    -- Очистка через 0.3 секунды
                    spawn(function()
                        task.wait(0.3)
                        for other, weld in pairs(weldedConstraints) do
                            if weld and weld.Parent then
                                weld:Destroy()
                            end
                            weldedConstraints[other] = nil
                            if frozenParts[other] then
                                for _, part in pairs(frozenParts[other]) do
                                    if part and part.Parent then
                                        part.Anchored = false
                                        part.CanCollide = true
                                    end
                                end
                                frozenParts[other] = nil
                            end
                        end
                    end)
                end
            end
        end
        task.wait(0.1)
    end
end

-- Функция проверки видимости цели (line of sight)
local function isVisible(targetPos)
    local myChar = player.Character
    local myHRP = myChar and myChar:FindFirstChild("HumanoidRootPart")
    if not myHRP then return false end

    local rayParams = RaycastParams.new()
    rayParams.FilterDescendantsInstances = {myChar}
    rayParams.FilterType = Enum.RaycastFilterType.Exclude
    rayParams.IgnoreWater = true

    local direction = (targetPos - myHRP.Position).Unit
    local raycast = workspace:Raycast(myHRP.Position, direction * 500, rayParams)

    if raycast and raycast.Position then
        local distToHit = (raycast.Position - myHRP.Position).Magnitude
        local distToTarget = (targetPos - myHRP.Position).Magnitude
        if distToHit < distToTarget - 1 then -- Hit something before target
            return false
        end
    end
    return true
end

-- Улучшенные функции — корректно ищут Remote внутри инструмента (в рюкзаке или в руках)
local function findGunTool()
    -- Проверяем сначала в Character (в руках)
    if player.Character then
        -- Прямой поиск по имени
        local g = player.Character:FindFirstChild("Gun")
        if g and g:IsA("Tool") then return g end
        -- Поиск инструментов с именем Gun или содержащим "gun"
        for _, v in pairs(player.Character:GetChildren()) do
            if v:IsA("Tool") and (v.Name == "Gun" or tostring(v.Name):lower():match("gun")) then
                return v
            end
        end
    end
    -- Затем в Backpack
    if player.Backpack then
        local g = player.Backpack:FindFirstChild("Gun")
        if g and g:IsA("Tool") then return g end
        for _, v in pairs(player.Backpack:GetChildren()) do
            if v:IsA("Tool") and (v.Name == "Gun" or tostring(v.Name):lower():match("gun")) then
                return v
            end
        end
    end
    return nil
end

-- возвращает только экипированный (в руках) gun
local function findEquippedGun()
    if player.Character then
        for _, v in pairs(player.Character:GetChildren()) do
            if v:IsA("Tool") and (v.Name == "Gun" or tostring(v.Name):lower():match("gun")) then
                return v
            end
        end
    end
    return nil
end

local function findShootRemote(root)
    if not root then return nil end
    local rfList = {}
    local reList = {}

    for _, child in pairs(root:GetDescendants()) do
        if child:IsA("RemoteFunction") then
            table.insert(rfList, child)
        elseif child:IsA("RemoteEvent") then
            table.insert(reList, child)
        end
    end

    -- Предпочтения: RemoteFunction с понятным именем (CreateBeam, RemoteFunction, Stab, Shoot)
    for _, rf in pairs(rfList) do
        local n = tostring(rf.Name):lower()
        if n:match("create") or n:match("beam") or n:match("remotefunction") or n:match("stab") or n:match("shoot") or n:match("knife") then
            return rf
        end
    end

    -- Если есть любые RemoteFunction - вернуть первый
    if #rfList > 0 then
        return rfList[1]
    end

    -- Иначе вернуть RemoteEvent с подходящим именем
    for _, re in pairs(reList) do
        local n = tostring(re.Name):lower()
        if n:match("create") or n:match("beam") or n:match("remoteevent") or n:match("stab") or n:match("shoot") or n:match("knife") then
            return re
        end
    end

    -- Если ничего подходящего не найдено - вернуть первый RemoteEvent (фоллбек)
    if #reList > 0 then
        return reList[1]
    end

    return nil
end

-- Если remote не найден в инструменте, попробуем поискать RemoteFunction в workspace (например workspace..Gun.KnifeLocal.CreateBeam.RemoteFunction)
local function findRemoteInWorkspace()
    -- Ищем RemoteFunction с характерными именами
    for _, child in pairs(workspace:GetDescendants()) do
        if child:IsA("RemoteFunction") then
            local n = tostring(child.Name):lower()
            if n:match("create") or n:match("beam") or n:match("remotefunction") or n:match("stab") or n:match("shoot") or n:match("knife") then
                return child
            end
        end
    end
    -- Фоллбек: любой RemoteFunction в рабочем пространстве
    for _, child in pairs(workspace:GetDescendants()) do
        if child:IsA("RemoteFunction") then
            return child
        end
    end
    return nil
end

-- Функция для стрельбы (silent aim) — теперь корректно находит и вызывает RemoteEvent/RemoteFunction внутри Gun
local function fireGunAtPosition(gun, pos)
    if not gun then return end
    local shootRemote = findShootRemote(gun)

    -- Иногда remote находится внутри подмодуля, например Gun.KnifeServer или KnifeLocal.CreateBeam.RemoteFunction
    if not shootRemote then
        local ks = gun:FindFirstChild("KnifeServer", true) or gun:FindFirstChild("KnifeLocal", true)
        if ks then
            shootRemote = findShootRemote(ks)
        end
    end

    -- Если всё ещё не найдено — попытаемся найти RemoteFunction в workspace (приоритет RemoteFunction)
    if not shootRemote then
        local wk = findRemoteInWorkspace()
        if wk then
            shootRemote = wk
        end
    end

    if shootRemote then
        if shootRemote:IsA("RemoteFunction") then
            shootRemote:InvokeServer(1, pos, "AH2")
        elseif shootRemote:IsA("RemoteEvent") then
            shootRemote:FireServer(1, pos, "AH2")
        end
    end
end

-- Функция для выстрела в центр экрана, только если оружие экипировано (в руках)
local function shootAtCenterEquipped()
    local gun = findEquippedGun()
    if not gun then
        Notification.new({
            Title = "Error",
            Description = "You must have the gun equipped (in your hands) to shoot!",
            Duration = 3,
            Icon = "rbxassetid://82898985676372"
        })
        return
    end

    local viewportSize = Camera.ViewportSize
    local ray = Camera:ViewportPointToRay(viewportSize.X / 2, viewportSize.Y / 2, 0)
    local targetPos = ray.Origin + ray.Direction * 500 -- Far point in center direction

    fireGunAtPosition(gun, targetPos)
end

-- Новая функция: прицельный выстрел по убийце (используется при нажатии C и на кнопке Shoot мобильной GUI)
local function shootAtMurderEquipped()
    if not flags.aimSheriffGun then return end
    local gun = findEquippedGun()
    if not gun then
        Notification.new({
            Title = "Error",
            Description = "You must have the gun equipped (in your hands) to shoot!",
            Duration = 3,
            Icon = "rbxassetid://82898985676372"
        })
        return
    end

    -- Находим первого Murder
    local murderer = nil
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= player and getPlayerType(p) == "Murder" then
            murderer = p
            break
        end
    end
    if murderer and murderer.Character and murderer.Character:FindFirstChild("HumanoidRootPart") then
        local targetPos = getPredictedPosition(murderer)
        if targetPos and isVisible(targetPos) then
            fireGunAtPosition(gun, targetPos)
        else
            Notification.new({
                Title = "Info",
                Description = "Target not visible or prediction failed.",
                Duration = 2,
                Icon = "rbxassetid://82898985676372"
            })
        end
    else
        Notification.new({
            Title = "Info",
            Description = "Murderer not found or not spawned yet.",
            Duration = 2,
            Icon = "rbxassetid://82898985676372"
        })
    end
end

-- Main Tab Sections
local MainAutoSection = MainTab:NewSection({
    Title = "Auto Features",
    Position = "Left"
})

MainAutoSection:NewToggle({
    Title = "Auto Kill All (Murder)",
    Callback = function(state)
        flags.autoKillAll = state
        if state then
            autoKillAllThread = spawn(autoKillAllFunction)
        else
            if autoKillAllThread then
                autoKillAllThread = nil
            end
            -- Очистка при выключении
            for other, weld in pairs(weldedConstraints) do
                if weld and weld.Parent then
                    weld:Destroy()
                end
                weldedConstraints[other] = nil
                if frozenParts[other] then
                    for _, part in pairs(frozenParts[other]) do
                        if part and part.Parent then
                            part.Anchored = false
                            part.CanCollide = true
                        end
                    end
                    frozenParts[other] = nil
                end
            end
        end
    end
})

-- Изменённое поведение: отключаем авто-стрельбу в цикле. Выстрел теперь выполняется вручную по нажатию C (ПК) или кнопке Shoot (моб.)
MainAutoSection:NewToggle({
    Title = "Aim Sheriff Gun and Shoot",
    Callback = function(state)
        flags.aimSheriffGun = state
        if state then
            Notification.new({
                Title = "Aim Mode",
                Description = "Aim mode enabled — press C on PC or use Shoot button on mobile to fire at Murderer.",
                Duration = 4,
                Icon = "rbxassetid://82898985676372"
            })
        else
            Notification.new({
                Title = "Aim Mode",
                Description = "Aim mode disabled.",
                Duration = 3,
                Icon = "rbxassetid://82898985676372"
            })
        end
    end
})

-- Если на телефоне, добавить кнопку для создания GUI (и привязать Shoot к прицельному выстрелу)
if UserInputService.TouchEnabled then
    MainAutoSection:NewButton({
        Title = "Create Shoot GUI",
        Callback = function()
            local ScreenGui = Instance.new("ScreenGui")
            ScreenGui.Name = "ShootGUI"
            ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
            ScreenGui.ResetOnSpawn = false

            local MainFrame = Instance.new("Frame")
            MainFrame.Name = "MainFrame"
            MainFrame.Parent = ScreenGui
            MainFrame.BackgroundTransparency = 1
            MainFrame.Position = UDim2.new(0.5, -90, 0.5, -45)
            MainFrame.Size = UDim2.new(0, 180, 0, 90)
            MainFrame.Active = true
            MainFrame.Draggable = true

            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0, 12)
            UICorner.Parent = MainFrame

            local UIStroke = Instance.new("UIStroke")
            UIStroke.Color = Color3.fromRGB(0, 0, 150)
            UIStroke.Thickness = 2
            UIStroke.Transparency = 0.5
            UIStroke.Parent = MainFrame

            local Title = Instance.new("TextLabel")
            Title.Parent = MainFrame
            Title.BackgroundTransparency = 1
            Title.Size = UDim2.new(1, 0, 0, 30)
            Title.Font = Enum.Font.GothamBold
            Title.Text = "Shoot Yoxi Hub"
            Title.TextColor3 = Color3.fromRGB(255, 255, 255)
            Title.TextSize = 18
            Title.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
            Title.TextStrokeTransparency = 0.5

            local ShootButton = Instance.new("TextButton")
            ShootButton.Parent = MainFrame
            ShootButton.BackgroundColor3 = Color3.fromRGB(0, 0, 50)
            ShootButton.Position = UDim2.new(0.1, 0, 0.4, 0)
            ShootButton.Size = UDim2.new(0.8, 0, 0.4, 0)
            ShootButton.Font = Enum.Font.GothamBold
            ShootButton.Text = "Shoot"
            ShootButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            ShootButton.TextSize = 16
            ShootButton.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
            ShootButton.TextStrokeTransparency = 0.5

            local ButtonCorner = Instance.new("UICorner")
            ButtonCorner.CornerRadius = UDim.new(0, 8)
            ButtonCorner.Parent = ShootButton

            local ButtonGradient = Instance.new("UIGradient")
            ButtonGradient.Color = ColorSequence.new{
                ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 0, 100)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 200))
            }
            ButtonGradient.Parent = ShootButton

            local ButtonStroke = Instance.new("UIStroke")
            ButtonStroke.Color = Color3.fromRGB(255, 255, 255)
            ButtonStroke.Thickness = 1
            ButtonStroke.Transparency = 0.3
            ButtonStroke.Parent = ShootButton

            -- Анимации
            local hoverTweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
            ShootButton.MouseEnter:Connect(function()
                TweenService:Create(ShootButton, hoverTweenInfo, {BackgroundColor3 = Color3.fromRGB(0, 0, 80)}):Play()
            end)
            ShootButton.MouseLeave:Connect(function()
                TweenService:Create(ShootButton, hoverTweenInfo, {BackgroundColor3 = Color3.fromRGB(0, 0, 50)}):Play()
            end)

            -- Draggable without jerks
            local dragging = false
            local dragInput
            local dragStart
            local startPos

            local function update(input)
                local delta = input.Position - dragStart
                MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            end

            MainFrame.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    dragging = true
                    dragStart = input.Position
                    startPos = MainFrame.Position
                    input.Changed:Connect(function()
                        if input.UserInputState == Enum.UserInputState.End then
                            dragging = false
                        end
                    end)
                end
            end)

            MainFrame.InputChanged:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                    dragInput = input
                end
            end)

            UserInputService.InputChanged:Connect(function(input)
                if input == dragInput and dragging then
                    update(input)
                end
            end)

            -- Shoot button callback -> только если оружие экипировано
            ShootButton.MouseButton1Click:Connect(function()
                shootAtMurderEquipped()
            end)
        end
    })
end

-- Keybind C for PC shoot at murder (только при нажатии)
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if not UserInputService.TouchEnabled and input.KeyCode == Enum.KeyCode.C then
        shootAtMurderEquipped()
    end
end)

local MainManualSection = MainTab:NewSection({
    Title = "Main Things",
    Position = "Left"
})

-- Функция для рекурсивного поиска GunDrop
local function findGunDrop(parent)
    for _, child in pairs(parent:GetChildren()) do
        if child.Name == "GunDrop" then
            return child
        end
        local found = findGunDrop(child)
        if found then
            return found
        end
    end
    return nil
end

-- Функция подбора Gun
local function pickUpGun()
    local gunDrop = findGunDrop(workspace)
    if gunDrop then
        local originalPosition = player.Character.HumanoidRootPart.CFrame
        player.Character.HumanoidRootPart.CFrame = gunDrop.CFrame
        spawn(function()
            while gunDrop and gunDrop.Parent do
                task.wait(0.1)
            end
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                player.Character.HumanoidRootPart.CFrame = originalPosition
            end
        end)
    else
        Notification.new({
            Title = "Error",
            Description = "Gun not found.",
            Duration = 3,
            Icon = "rbxassetid://82898985676372"
        })
    end
end

MainManualSection:NewButton({
    Title = "Pick Up Gun",
    Callback = function()
        pickUpGun()
    end
})

local pickupGunKey = Enum.KeyCode.G
local pickupGunConnection = nil

local function setupPickupGunKeybindListener()
    if pickupGunConnection then
        pickupGunConnection:Disconnect()
        pickupGunConnection = nil
    end
    pickupGunConnection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        if input.KeyCode == pickupGunKey then
            pickUpGun()
        end
    end)
end

setupPickupGunKeybindListener()

MainManualSection:NewKeybind({
    Title = "Pick Up Gun Keybind",
    Description = "Key to pick up gun",
    Value = "G",
    Callback = function(key)
        if typeof(key) == "EnumItem" then
            pickupGunKey = key
        elseif typeof(key) == "string" then
            local upper = key:upper()
            local suc, enumKey = pcall(function() return Enum.KeyCode[upper] end)
            if suc and enumKey then
                pickupGunKey = enumKey
            end
        end
        setupPickupGunKeybindListener()
        Notification.new({
            Title = "Pick Up Gun Keybind Set",
            Description = "Pick Up Gun key set to: " .. tostring(pickupGunKey.Name),
            Duration = 3,
            Icon = "rbxassetid://82898985676372"
        })
    end
})

if UserInputService.TouchEnabled then
    MainManualSection:NewButton({
        Title = "Create PickUp Gun GUI",
        Callback = function()
            local ScreenGui = Instance.new("ScreenGui")
            ScreenGui.Name = "PickUpGunGUI"
            ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
            ScreenGui.ResetOnSpawn = false

            local MainFrame = Instance.new("Frame")
            MainFrame.Name = "MainFrame"
            MainFrame.Parent = ScreenGui
            MainFrame.BackgroundTransparency = 1
            MainFrame.Position = UDim2.new(0.5, -90, 0.5, -45)
            MainFrame.Size = UDim2.new(0, 180, 0, 90)
            MainFrame.Active = true
            MainFrame.Draggable = true

            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0, 12)
            UICorner.Parent = MainFrame

            local UIStroke = Instance.new("UIStroke")
            UIStroke.Color = Color3.fromRGB(0, 150, 0)
            UIStroke.Thickness = 2
            UIStroke.Transparency = 0.5
            UIStroke.Parent = MainFrame

            local Title = Instance.new("TextLabel")
            Title.Parent = MainFrame
            Title.BackgroundTransparency = 1
            Title.Size = UDim2.new(1, 0, 0, 30)
            Title.Font = Enum.Font.GothamBold
            Title.Text = "PickUp Gun"
            Title.TextColor3 = Color3.fromRGB(255, 255, 255)
            Title.TextSize = 18
            Title.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
            Title.TextStrokeTransparency = 0.5

            local PickButton = Instance.new("TextButton")
            PickButton.Parent = MainFrame
            PickButton.BackgroundColor3 = Color3.fromRGB(0, 50, 0)
            PickButton.Position = UDim2.new(0.1, 0, 0.4, 0)
            PickButton.Size = UDim2.new(0.8, 0, 0.4, 0)
            PickButton.Font = Enum.Font.GothamBold
            PickButton.Text = "PickUp Gun"
            PickButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            PickButton.TextSize = 16
            PickButton.TextStrokeColor3 = Color3.fromRGB(0, 0, 0)
            PickButton.TextStrokeTransparency = 0.5

            local ButtonCorner = Instance.new("UICorner")
            ButtonCorner.CornerRadius = UDim.new(0, 8)
            ButtonCorner.Parent = PickButton

            local ButtonGradient = Instance.new("UIGradient")
            ButtonGradient.Color = ColorSequence.new{
                ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 100, 0)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 200, 0))
            }
            ButtonGradient.Parent = PickButton

            local ButtonStroke = Instance.new("UIStroke")
            ButtonStroke.Color = Color3.fromRGB(255, 255, 255)
            ButtonStroke.Thickness = 1
            ButtonStroke.Transparency = 0.3
            ButtonStroke.Parent = PickButton

            -- Анимации
            local hoverTweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
            PickButton.MouseEnter:Connect(function()
                TweenService:Create(PickButton, hoverTweenInfo, {BackgroundColor3 = Color3.fromRGB(0, 80, 0)}):Play()
            end)
            PickButton.MouseLeave:Connect(function()
                TweenService:Create(PickButton, hoverTweenInfo, {BackgroundColor3 = Color3.fromRGB(0, 50, 0)}):Play()
            end)

            -- Draggable without jerks
            local dragging = false
            local dragInput
            local dragStart
            local startPos

            local function update(input)
                local delta = input.Position - dragStart
                MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            end

            MainFrame.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    dragging = true
                    dragStart = input.Position
                    startPos = MainFrame.Position
                    input.Changed:Connect(function()
                        if input.UserInputState == Enum.UserInputState.End then
                            dragging = false
                        end
                    end)
                end
            end)

            MainFrame.InputChanged:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                    dragInput = input
                end
            end)

            UserInputService.InputChanged:Connect(function(input)
                if input == dragInput and dragging then
                    update(input)
                end
            end)

            PickButton.MouseButton1Click:Connect(function()
                pickUpGun()
            end)
        end
    })
end

MainManualSection:NewButton({
    Title = "Fling Murder",
    Callback = function()
        local murderer = nil
        for _, p in pairs(Players:GetPlayers()) do
            if p ~= player and getPlayerType(p) == "Murder" then
                murderer = p
                break
            end
        end
        if murderer then
            SkidFling(murderer)
        else
            Notification.new({
                Title = "Error",
                Description = "Killer is not spawn yet",
                Duration = 3,
                Icon = "rbxassetid://82898985676372"
            })
        end
    end
})

MainManualSection:NewButton({
    Title = "Teleport to Sheriff",
    Callback = function()
        local sheriff = nil
        for _, p in pairs(Players:GetPlayers()) do
            if p ~= player and getPlayerType(p) == "Sheriff" then
                sheriff = p
                break
            end
        end
        if sheriff and sheriff.Character and sheriff.Character:FindFirstChild("HumanoidRootPart") then
            player.Character.HumanoidRootPart.CFrame = sheriff.Character.HumanoidRootPart.CFrame
        else
            Notification.new({
                Title = "Error",
                Description = "Sheriff Not Found!",
                Duration = 3,
                Icon = "rbxassetid://82898985676372"
            })
        end
    end
})

MainManualSection:NewButton({
    Title = "Teleport to Murder",
    Callback = function()
        local murderer = nil
        for _, p in pairs(Players:GetPlayers()) do
            if p ~= player and getPlayerType(p) == "Murder" then
                murderer = p
                break
            end
        end
        if murderer and murderer.Character and murderer.Character:FindFirstChild("HumanoidRootPart") then
            player.Character.HumanoidRootPart.CFrame = murderer.Character.HumanoidRootPart.CFrame
        else
            Notification.new({
                Title = "Error",
                Description = "Murder Not Found!",
                Duration = 3,
                Icon = "rbxassetid://82898985676372"
            })
        end
    end
})

MainManualSection:NewButton({
    Title = "Teleport to Lobby",
    Callback = function()
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            player.Character.HumanoidRootPart.CFrame = CFrame.new(-108.11, 140.70, 81.90)
        end
    end
})

MainManualSection:NewButton({
    Title = "Teleport to Map",
    Callback = function()
        local coinContainer = workspace:FindFirstChild("CoinContainer", true)
        if coinContainer then
            local position = coinContainer:GetModelCFrame().Position
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                player.Character.HumanoidRootPart.CFrame = CFrame.new(position)
            end
        else
            Notification.new({
                Title = "Error",
                Description = "Map Not Found!",
                Duration = 3,
                Icon = "rbxassetid://82898985676372"
            })
        end
    end
})

-- Esp Tab
local EspSection = EspTab:NewSection({
    Title = "Visual Enhancements",
    Position = "Left"
})

EspSection:NewToggle({
    Title = "Esp Murder",
    Description = "Show ESP for Murder",
    Callback = function(state)
        flags.espMurder = state
        for _, p in pairs(Players:GetPlayers()) do
            if p ~= player and p.Character then
                updateEsp(p)
            end
        end
    end
})

EspSection:NewToggle({
    Title = "Esp Sheriff",
    Description = "Show ESP for Sheriff",
    Callback = function(state)
        flags.espSheriff = state
        for _, p in pairs(Players:GetPlayers()) do
            if p ~= player and p.Character then
                updateEsp(p)
            end
        end
    end
})

EspSection:NewToggle({
    Title = "Esp Players",
    Description = "Show ESP for Players",
    Callback = function(state)
        flags.espPlayers = state
        for _, p in pairs(Players:GetPlayers()) do
            if p ~= player and p.Character then
                updateEsp(p)
            end
        end
    end
})

-- Tracer Section
local TracerSection = EspTab:NewSection({
    Title = "Tracers",
    Position = "Left"
})

TracerSection:NewToggle({
    Title = "Tracer Murder",
    Description = "Show Tracer for Murder",
    Callback = function(state)
        flags.tracerMurder = state
    end
})

TracerSection:NewToggle({
    Title = "Tracer Sheriff",
    Description = "Show Tracer for Sheriff",
    Callback = function(state)
        flags.tracerSheriff = state
    end
})

TracerSection:NewToggle({
    Title = "Tracer Players",
    Description = "Show Tracer for Players",
    Callback = function(state)
        flags.tracerPlayers = state
    end
})

-- Tracers logic
local tracers = {}
local function removeTracer(p)
    if tracers[p] then
        tracers[p]:Remove()
        tracers[p] = nil
    end
end

local function updateTracers()
    for _, p in pairs(Players:GetPlayers()) do
        if p ~= player and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
            local type = getPlayerType(p)
            local shouldHaveTracer
            if type == "Player" then
                shouldHaveTracer = flags.tracerPlayers
            else
                shouldHaveTracer = flags["tracer" .. type]
            end
            if shouldHaveTracer then
                if not tracers[p] then
                    tracers[p] = Drawing.new("Line")
                    tracers[p].Thickness = 1
                    tracers[p].Transparency = 1
                end
                local color = espColors[type].fill
                tracers[p].Color = color
                local hrp = p.Character.HumanoidRootPart
                local screenPos, onScreen = Camera:WorldToViewportPoint(hrp.Position)
                if onScreen then
                    tracers[p].From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y)
                    tracers[p].To = Vector2.new(screenPos.X, screenPos.Y)
                    tracers[p].Visible = true
                else
                    tracers[p].Visible = false
                end
            else
                removeTracer(p)
            end
        else
            removeTracer(p)
        end
    end
end

-- Оптимизация tracers для мобильных: отдельный цикл вместо RenderStepped
if UserInputService.TouchEnabled then
    spawn(function()
        while true do
            updateTracers()
            task.wait(0.2) -- Каждые 0.2 сек на мобильных
        end
    end)
else
    RunService.RenderStepped:Connect(updateTracers)
end

Players.PlayerRemoving:Connect(function(p)
    removeTracer(p)
end)

-- Player Tab
local PlayerMovementSection = PlayerTab:NewSection({
    Title = "Movement Modifications",
    Position = "Left"
})

PlayerMovementSection:NewToggle({
    Title = "Walkspeed",
    Description = "Enable custom walkspeed",
    Callback = function(state) 
        flags.walkspeedEnabled = state 
    end
})

PlayerMovementSection:NewSlider({
    Title = "Walkspeed Value",
    Value = { Min = 0, Max = 25, Default = walkspeedValue },
    Callback = function(val) 
        -- enforce max 25 and min 0
        if val > 25 then val = 25 end
        if val < 0 then val = 0 end
        walkspeedValue = val 
    end
})

PlayerMovementSection:NewTitle("25 is the maximum, because of anti-cheat!")

local CameraSection = PlayerTab:NewSection({
    Title = "Camera Settings",
    Position = "Left"
})

CameraSection:NewSlider({
    Title = "Field of View",
    Value = { Min = 0, Max = 120, Default = 70 },
    Callback = function(val) 
        workspace.CurrentCamera.FieldOfView = val
    end
})

local PlayerCollisionSection = PlayerTab:NewSection({
    Title = "Collision Settings",
    Position = "Left"
})

-- НоуКлип система
local originalCollideSettings = {}
local noclipConnection = nil

local function storeOriginalCollisions()
    originalCollideSettings = {}
    if player.Character then
        for _, part in pairs(player.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                originalCollideSettings[part] = part.CanCollide
            end
        end
    end
end

local function restoreCollisions()
    for part, canColl in pairs(originalCollideSettings) do
        if part and part.Parent then
            part.CanCollide = canColl
        end
    end
    originalCollideSettings = {}
end

local function enableNoclip()
    -- prevent multiple connections stacking
    if noclipConnection then
        -- already enabled
        return
    end
    storeOriginalCollisions()
    noclipConnection = RunService.Stepped:Connect(function()
        if flags.noClip and player.Character then
            for _, part in pairs(player.Character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end
    end)
end

local function disableNoclip()
    if noclipConnection then
        noclipConnection:Disconnect()
        noclipConnection = nil
    end
    flags.noClip = false
    restoreCollisions()
end

PlayerCollisionSection:NewToggle({
    Title = "NoClip",
    Description = "Pass through objects",
    Callback = function(state)
        flags.noClip = state
        if state then
            enableNoclip()
            Notification.new({
                Title = "NoClip Enabled",
                Description = "You can now pass through objects.",
                Duration = 3,
                Icon = "rbxassetid://82898985676372"
            })
        else
            disableNoclip()
            Notification.new({
                Title = "NoClip Disabled",
                Description = "Collisions are now enabled.",
                Duration = 3,
                Icon = "rbxassetid://82898985676372"
            })
        end
    end
})

-- Improved Keybind handling for NoClip (fixes inability to toggle off when toggled on via keybind)
local noclipKey = Enum.KeyCode.N
local noclipToggleConnection = nil

local function setupNoclipKeybindListener()
    if noclipToggleConnection then
        noclipToggleConnection:Disconnect()
        noclipToggleConnection = nil
    end
    noclipToggleConnection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        if input.KeyCode == noclipKey then
            flags.noClip = not flags.noClip
            if flags.noClip then
                enableNoclip()
                Notification.new({
                    Title = "NoClip Enabled",
                    Description = "You can now pass through objects.",
                    Duration = 3,
                    Icon = "rbxassetid://82898985676372"
                })
            else
                disableNoclip()
                Notification.new({
                    Title = "NoClip Disabled",
                    Description = "Collisions are now enabled.",
                    Duration = 3,
                    Icon = "rbxassetid://82898985676372"
                })
            end
        end
    end)
end

-- initialize listener immediately
setupNoclipKeybindListener()

PlayerCollisionSection:NewKeybind({
    Title = "NoClip Keybind",
    Description = "Key to toggle NoClip",
    Value = "N",
    Callback = function(key)
        -- The library may provide key as Enum.KeyCode or string. Handle both.
        if typeof(key) == "EnumItem" then
            noclipKey = key
        elseif typeof(key) == "string" then
            local upper = key:upper()
            local suc, enumKey = pcall(function() return Enum.KeyCode[upper] end)
            if suc and enumKey then
                noclipKey = enumKey
            end
        end
        -- Recreate listener with new key
        setupNoclipKeybindListener()
        Notification.new({
            Title = "NoClip Keybind Set",
            Description = "NoClip toggle key set to: " .. tostring(noclipKey.Name),
            Duration = 3,
            Icon = "rbxassetid://82898985676372"
        })
    end
})

-- Misc Tab
local MiscSection = MiscTab:NewSection({
    Title = "Misc Things",
    Position = "Left"
})

MiscSection:NewButton({
    Title = "Load Fling Script (Made By: Yomka)",
    Callback = function()
        loadstring([[
            local Players = game:GetService("Players")
            local Player = Players.LocalPlayer
            local TweenService = game:GetService("TweenService")
            local UserInputService = game:GetService("UserInputService")

            -- Создание основного GUI
            local ScreenGui = Instance.new("ScreenGui")
            ScreenGui.Name = "YoxiHubFling"
            ScreenGui.Parent = Player:WaitForChild("PlayerGui")
            ScreenGui.ResetOnSpawn = false
            ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

            -- Основной контейнер
            local MainFrame = Instance.new("Frame")
            MainFrame.Parent = ScreenGui
            MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
            MainFrame.BackgroundTransparency = 0.05
            MainFrame.Position = UDim2.new(0.5, -175, 0.5, -175)
            MainFrame.Size = UDim2.new(0, 350, 0, 350)
            MainFrame.Active = true
            MainFrame.ClipsDescendants = true

            -- Эффекты контейнера
            local FrameCorner = Instance.new("UICorner")
            FrameCorner.CornerRadius = UDim.new(0, 12)
            FrameCorner.Parent = MainFrame

            local FrameStroke = Instance.new("UIStroke")
            FrameStroke.Parent = MainFrame
            FrameStroke.Color = Color3.fromRGB(60, 60, 70)
            FrameStroke.Thickness = 2
            FrameStroke.Transparency = 0.3

            -- Заголовок
            local TitleContainer = Instance.new("Frame")
            TitleContainer.Parent = MainFrame
            TitleContainer.BackgroundTransparency = 1
            TitleContainer.Size = UDim2.new(1, 0, 0, 40)
            TitleContainer.Position = UDim2.new(0, 0, 0, 0)

            local Title = Instance.new("TextLabel")
            Title.Parent = TitleContainer
            Title.BackgroundTransparency = 1
            Title.Size = UDim2.new(1, -20, 1, 0)
            Title.Position = UDim2.new(0, 10, 0, 0)
            Title.Font = Enum.Font.GothamBold
            Title.Text = "YOXI HUB FLING"
            Title.TextColor3 = Color3.fromRGB(220, 220, 230)
            Title.TextSize = 22
            Title.TextStrokeTransparency = 0.9
            Title.TextXAlignment = Enum.TextXAlignment.Left

            local TitleDivider = Instance.new("Frame")
            TitleDivider.Parent = TitleContainer
            TitleDivider.BackgroundColor3 = Color3.fromRGB(60, 60, 70)
            TitleDivider.BorderSizePixel = 0
            TitleDivider.Size = UDim2.new(1, -20, 0, 1)
            TitleDivider.Position = UDim2.new(0, 10, 1, -1)

            -- Кнопка сворачивания
            local MinimizeButton = Instance.new("TextButton")
            MinimizeButton.Parent = TitleContainer
            MinimizeButton.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
            MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
            MinimizeButton.Position = UDim2.new(1, -40, 0, 4)
            MinimizeButton.Font = Enum.Font.GothamBold
            MinimizeButton.Text = "-"
            MinimizeButton.TextColor3 = Color3.fromRGB(220, 220, 230)
            MinimizeButton.TextSize = 18
            MinimizeButton.AutoButtonColor = false

            local MinimizeCorner = Instance.new("UICorner")
            MinimizeCorner.CornerRadius = UDim.new(0, 6)
            MinimizeCorner.Parent = MinimizeButton

            local MinimizeStroke = Instance.new("UIStroke")
            MinimizeStroke.Parent = MinimizeButton
            MinimizeStroke.Color = Color3.fromRGB(80, 80, 90)
            MinimizeStroke.Thickness = 1
            MinimizeStroke.Transparency = 0.5

            -- Поле ввода
            local InputContainer = Instance.new("Frame")
            InputContainer.Parent = MainFrame
            InputContainer.BackgroundTransparency = 1
            InputContainer.Size = UDim2.new(1, -20, 0, 40)
            InputContainer.Position = UDim2.new(0, 10, 0, 60)

            local TextBox = Instance.new("TextBox")
            TextBox.Parent = InputContainer
            TextBox.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
            TextBox.Size = UDim2.new(1, 0, 1, 0)
            TextBox.Font = Enum.Font.GothamMedium
            TextBox.PlaceholderText = "Enter player nickname"
            TextBox.PlaceholderColor3 = Color3.fromRGB(140, 140, 150)
            TextBox.Text = ""
            TextBox.TextColor3 = Color3.fromRGB(220, 220, 230)
            TextBox.TextSize = 16
            TextBox.TextXAlignment = Enum.TextXAlignment.Left
            TextBox.ClearTextOnFocus = false

            local InputCorner = Instance.new("UICorner")
            InputCorner.CornerRadius = UDim.new(0, 8)
            InputCorner.Parent = TextBox

            local InputPadding = Instance.new("UIPadding")
            InputPadding.Parent = TextBox
            InputPadding.PaddingLeft = UDim.new(0, 10)

            local InputStroke = Instance.new("UIStroke")
            InputStroke.Parent = TextBox
            InputStroke.Color = Color3.fromRGB(60, 60, 70)
            InputStroke.Thickness = 1
            InputStroke.Transparency = 0.3

            -- Список игроков
            local PlayerListContainer = Instance.new("Frame")
            PlayerListContainer.Parent = MainFrame
            PlayerListContainer.BackgroundTransparency = 1
            PlayerListContainer.Size = UDim2.new(1, -20, 0, 180)
            PlayerListContainer.Position = UDim2.new(0, 10, 0, 110)

            local PlayerListFrame = Instance.new("ScrollingFrame")
            PlayerListFrame.Parent = PlayerListContainer
            PlayerListFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
            PlayerListFrame.Size = UDim2.new(1, 0, 1, 0)
            PlayerListFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
            PlayerListFrame.ScrollBarThickness = 6
            PlayerListFrame.ScrollBarImageColor3 = Color3.fromRGB(90, 90, 100)
            PlayerListFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
            PlayerListFrame.BorderSizePixel = 0
            PlayerListFrame.BottomImage = ""
            PlayerListFrame.TopImage = ""

            local ListCorner = Instance.new("UICorner")
            ListCorner.CornerRadius = UDim.new(0, 8)
            ListCorner.Parent = PlayerListFrame

            local ListLayout = Instance.new("UIListLayout")
            ListLayout.Parent = PlayerListFrame
            ListLayout.SortOrder = Enum.SortOrder.LayoutOrder
            ListLayout.Padding = UDim.new(0, 6)

            local ListPadding = Instance.new("UIPadding")
            ListPadding.Parent = PlayerListFrame
            ListPadding.PaddingTop = UDim.new(0, 8)
            ListPadding.PaddingLeft = UDim.new(0, 8)
            ListPadding.PaddingRight = UDim.new(0, 8)
            ListPadding.PaddingBottom = UDim.new(0, 8)

            -- Кнопка активации
            local ButtonContainer = Instance.new("Frame")
            ButtonContainer.Parent = MainFrame
            ButtonContainer.BackgroundTransparency = 1
            ButtonContainer.Size = UDim2.new(1, -40, 0, 50)
            ButtonContainer.Position = UDim2.new(0, 20, 1, -55)

            local ActionButton = Instance.new("TextButton")
            ActionButton.Parent = ButtonContainer
            ActionButton.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
            ActionButton.Size = UDim2.new(1, 0, 1, 0)
            ActionButton.Font = Enum.Font.GothamBold
            ActionButton.Text = "FLING"
            ActionButton.TextColor3 = Color3.fromRGB(220, 220, 230)
            ActionButton.TextSize = 18
            ActionButton.AutoButtonColor = false
            ActionButton.TextStrokeTransparency = 0.9

            local ButtonCorner = Instance.new("UICorner")
            ButtonCorner.CornerRadius = UDim.new(0, 8)
            ButtonCorner.Parent = ActionButton

            local ButtonStroke = Instance.new("UIStroke")
            ButtonStroke.Parent = ActionButton
            ButtonStroke.Color = Color3.fromRGB(80, 80, 90)
            ButtonStroke.Thickness = 2
            ButtonStroke.Transparency = 0.5

            -- Анимации кнопок
            local hoverTweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
            local pressTweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

            ActionButton.MouseEnter:Connect(function()
                local tween = TweenService:Create(ActionButton, hoverTweenInfo, {
                    BackgroundColor3 = Color3.fromRGB(60, 60, 70)
                })
                tween:Play()
            end)

            ActionButton.MouseLeave:Connect(function()
                local tween = TweenService:Create(ActionButton, hoverTweenInfo, {
                    BackgroundColor3 = Color3.fromRGB(50, 50, 60)
                })
                tween:Play()
            end)

            ActionButton.MouseButton1Down:Connect(function()
                local tween = TweenService:Create(ActionButton, pressTweenInfo, {
                    BackgroundTransparency = 0.2,
                    Size = UDim2.new(0.98, 0, 0.96, 0),
                    Position = UDim2.new(0.01, 0, 0.02, 0)
                })
                tween:Play()
            end)

            ActionButton.MouseButton1Up:Connect(function()
                local tween = TweenService:Create(ActionButton, pressTweenInfo, {
                    BackgroundTransparency = 0,
                    Size = UDim2.new(1, 0, 1, 0),
                    Position = UDim2.new(0, 0, 0, 0)
                })
                tween:Play()
            end)

            MinimizeButton.MouseEnter:Connect(function()
                local tween = TweenService:Create(MinimizeButton, hoverTweenInfo, {
                    BackgroundColor3 = Color3.fromRGB(60, 60, 70)
                })
                tween:Play()
            end)

            MinimizeButton.MouseLeave:Connect(function()
                local tween = TweenService:Create(MinimizeButton, hoverTweenInfo, {
                    BackgroundColor3 = Color3.fromRGB(50, 50, 60)
                })
                tween:Play()
            end)

            MinimizeButton.MouseButton1Down:Connect(function()
                local tween = TweenService:Create(MinimizeButton, pressTweenInfo, {
                    BackgroundTransparency = 0.2,
                    Size = UDim2.new(0, 28, 0, 28),
                    Position = UDim2.new(1, -39, 0, 3)
                })
                tween:Play()
            end)

            MinimizeButton.MouseButton1Up:Connect(function()
                local tween = TweenService:Create(MinimizeButton, pressTweenInfo, {
                    BackgroundTransparency = 0,
                    Size = UDim2.new(0, 30, 0, 30),
                    Position = UDim2.new(1, -40, 0, 4)
                })
                tween:Play()
            end)

            -- Функция для создания элементов списка игроков
            local function createPlayerEntry(plr)
                local entry = Instance.new("TextButton")
                entry.Parent = PlayerListFrame
                entry.BackgroundColor3 = Color3.fromRGB(45, 45, 50)
                entry.Size = UDim2.new(1, 0, 0, 32)
                entry.Font = Enum.Font.Gotham
                entry.Text = plr.DisplayName
                entry.TextColor3 = Color3.fromRGB(220, 220, 230)
                entry.TextSize = 16
                entry.TextXAlignment = Enum.TextXAlignment.Left
                entry.AutoButtonColor = false
                
                local padding = Instance.new("UIPadding")
                padding.Parent = entry
                padding.PaddingLeft = UDim.new(0, 12)
                
                local corner = Instance.new("UICorner")
                corner.CornerRadius = UDim.new(0, 6)
                corner.Parent = entry
                
                local stroke = Instance.new("UIStroke")
                stroke.Parent = entry
                stroke.Color = Color3.fromRGB(70, 70, 80)
                stroke.Thickness = 1
                stroke.Transparency = 0.3
                
                entry.MouseEnter:Connect(function()
                    local tween = TweenService:Create(entry, hoverTweenInfo, {
                        BackgroundColor3 = Color3.fromRGB(55, 55, 65)
                    })
                    tween:Play()
                end)
                
                entry.MouseLeave:Connect(function()
                    local tween = TweenService:Create(entry, hoverTweenInfo, {
                        BackgroundColor3 = Color3.fromRGB(45, 45, 50)
                    })
                    tween:Play()
                end)
                
                entry.MouseButton1Down:Connect(function()
                    local tween = TweenService:Create(entry, pressTweenInfo, {
                        BackgroundTransparency = 0.2,
                        Size = UDim2.new(0.98, 0, 0, 31)
                    })
                    tween:Play()
                end)
                
                entry.MouseButton1Up:Connect(function()
                    local tween = TweenService:Create(entry, pressTweenInfo, {
                        BackgroundTransparency = 0,
                        Size = UDim2.new(1, 0, 0, 32)
                    })
                    tween:Play()
                end)
                
                return entry
            end

            -- Функция для обновления списка игроков
            local function UpdatePlayerList()
                for _, child in pairs(PlayerListFrame:GetChildren()) do
                    if child:IsA("TextButton") then
                        child:Destroy()
                    end
                end

                for _, plr in pairs(Players:GetPlayers()) do
                    if plr ~= Player then
                        local entry = createPlayerEntry(plr)
                        entry.MouseButton1Click:Connect(function()
                            TextBox.Text = plr.Name
                        end)
                    end
                end
            end

            -- Функция поиска игрока
            local function GetPlayer(Name)
                Name = Name:lower()
                for _, x in next, Players:GetPlayers() do
                    if x ~= Player then
                        if x.Name:lower():match("^" .. Name) or x.DisplayName:lower():match("^" .. Name) then
                            return x
                        end
                    end
                end
                return nil
            end

            -- Функция уведомлений
            local function Message(_Title, _Text, Time)
                game:GetService("StarterGui"):SetCore("SendNotification", {Title = _Title, Text = _Text, Duration = Time})
            end

            -- Функция флинга
            local function SkidFling(TargetPlayer)
                local Character = Player.Character
                local Humanoid = Character and Character:FindFirstChildOfClass("Humanoid")
                local RootPart = Humanoid and Humanoid.RootPart
                local TCharacter = TargetPlayer.Character
                local THumanoid = TCharacter and TCharacter:FindFirstChildOfClass("Humanoid")
                local TRootPart = THumanoid and THumanoid.RootPart
                local THead = TCharacter and TCharacter:FindFirstChild("Head")
                local Accessory = TCharacter and TCharacter:FindFirstChildOfClass("Accessory")
                local Handle = Accessory and Accessory:FindFirstChild("Handle")

                if Character and Humanoid and RootPart then
                    if RootPart.Velocity.Magnitude < 50 then
                        getgenv().OldPos = RootPart.CFrame
                        getgenv().FPDH = workspace.FallenPartsDestroyHeight
                    end

                    if THumanoid and THumanoid.Sit then
                        return Message("Error Occurred", "Target is sitting", 5)
                    end

                    if THead then
                        workspace.CurrentCamera.CameraSubject = THead
                    elseif Handle then
                        workspace.CurrentCamera.CameraSubject = Handle
                    else
                        workspace.CurrentCamera.CameraSubject = THumanoid
                    end

                    if not TCharacter:FindFirstChildWhichIsA("BasePart") then
                        return
                    end

                    local function FPos(BasePart, Pos, Ang)
                        RootPart.CFrame = CFrame.new(BasePart.Position) * Pos * Ang
                        Character:SetPrimaryPartCFrame(CFrame.new(BasePart.Position) * Pos * Ang)
                        RootPart.Velocity = Vector3.new(9e7, 9e7 * 10, 9e7)
                        RootPart.RotVelocity = Vector3.new(9e8, 9e8, 9e8)
                    end

                    local function SFBasePart(BasePart)
                        local TimeToWait = 2
                        local Time = tick()
                        local Angle = 0
                        repeat
                            if RootPart and THumanoid then
                                if BasePart.Velocity.Magnitude < 50 then
                                    Angle = Angle + 100
                                    FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle),0 ,0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(2.25, 1.5, -2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(-2.25, -1.5, 2.25) + THumanoid.MoveDirection * BasePart.Velocity.Magnitude / 1.25, CFrame.Angles(math.rad(Angle), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, 1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, -1.5, 0) + THumanoid.MoveDirection,CFrame.Angles(math.rad(Angle), 0, 0))
                                    task.wait()
                                else
                                    FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, -1.5, -THumanoid.WalkSpeed), CFrame.Angles(0, 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, 1.5, THumanoid.WalkSpeed), CFrame.Angles(math.rad(90), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, -1.5, -TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(0, 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, 1.5, TRootPart.Velocity.Magnitude / 1.25), CFrame.Angles(math.rad(90), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(math.rad(90), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, -1.5 ,0), CFrame.Angles(math.rad(-90), 0, 0))
                                    task.wait()
                                    FPos(BasePart, CFrame.new(0, -1.5, 0), CFrame.Angles(0, 0, 0))
                                    task.wait()
                                end
                            else
                                break
                            end
                        until BasePart.Velocity.Magnitude > 500 or BasePart.Parent ~= TargetPlayer.Character or TargetPlayer.Parent ~= Players or not TargetPlayer.Character == TCharacter or THumanoid.Sit or Humanoid.Health <= 0 or tick() > Time + TimeToWait
                    end

                    workspace.FallenPartsDestroyHeight = 0/0

                    local BV = Instance.new("BodyVelocity")
                    BV.Name = "EpixVel"
                    BV.Parent = RootPart
                    BV.Velocity = Vector3.new(9e8, 9e8, 9e8)
                    BV.MaxForce = Vector3.new(1/0, 1/0, 1/0)

                    Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)

                    if TRootPart and THead then
                        if (TRootPart.CFrame.p - THead.CFrame.p).Magnitude > 5 then
                            SFBasePart(THead)
                        else
                            SFBasePart(TRootPart)
                        end
                    elseif TRootPart and not THead then
                        SFBasePart(TRootPart)
                    elseif not TRootPart and THead then
                        SFBasePart(THead)
                    elseif not TRootPart and not THead and Accessory and Handle then
                        SFBasePart(Handle)
                    else
                        return Message("Error Occurred", "Target is missing everything", 5)
                    end

                    BV:Destroy()
                    Humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
                    workspace.CurrentCamera.CameraSubject = Humanoid

                    repeat
                        RootPart.CFrame = getgenv().OldPos * CFrame.new(0, .5, 0)
                        Character:SetPrimaryPartCFrame(getgenv().OldPos * CFrame.new(0, .5, 0))
                        Humanoid:ChangeState("GettingUp")
                        for _, x in pairs(Character:GetChildren()) do
                            if x:IsA("BasePart") then
                                x.Velocity, x.RotVelocity = Vector3.new(), Vector3.new()
                            end
                        end
                        task.wait()
                    until (RootPart.Position - getgenv().OldPos.p).Magnitude < 25

                    workspace.FallenPartsDestroyHeight = getgenv().FPDH
                else
                    return Message("Error Occurred", "Random error", 5)
                end
            end

            -- Обработчик кнопки
            ActionButton.MouseButton1Click:Connect(function()
                local targetName = TextBox.Text
                local targetPlayer = GetPlayer(targetName)
                if targetPlayer then
                    SkidFling(targetPlayer)
                else
                    Message("Error Occurred", "Invalid username", 5)
                end
            end)

            -- Обновляем список при запуске и при изменениях игроков
            UpdatePlayerList()
            Players.PlayerAdded:Connect(UpdatePlayerList)
            Players.PlayerRemoving:Connect(UpdatePlayerList)

            -- Поддержка перетаскивания
            local dragging
            local dragInput
            local dragStart
            local startPos

            local function update(input)
                local delta = input.Position - dragStart
                MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            end

            TitleContainer.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    dragging = true
                    dragStart = input.Position
                    startPos = MainFrame.Position
                    input.Changed:Connect(function()
                        if input.UserInputState == Enum.UserInputState.End then
                            dragging = false
                        end
                    end)
                end
            end)

            TitleContainer.InputChanged:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                    dragInput = input
                end
            end)

            UserInputService.InputChanged:Connect(function(input)
                if input == dragInput and dragging then
                    update(input)
                end
            end)

            -- Функциональность сворачивания
            local minimized = false

            MinimizeButton.MouseButton1Click:Connect(function()
                minimized = not minimized
                if minimized then
                    MainFrame.Size = UDim2.new(0, 350, 0, 40)
                    InputContainer.Visible = false
                    PlayerListContainer.Visible = false
                    ButtonContainer.Visible = false
                    MinimizeButton.Text = "+"
                else
                    MainFrame.Size = UDim2.new(0, 350, 0, 350)
                    InputContainer.Visible = true
                    PlayerListContainer.Visible = true
                    ButtonContainer.Visible = true
                    MinimizeButton.Text = "-"
                end
            end)
        ]])()
    end
})

MiscSection:NewButton({
    Title = "Load Invisible Script",
    Callback = function()
        loadstring(game:HttpGet('https://pastebin.com/raw/3Rnd9rHf'))()
    end
})

-- NEW BUTTON: Load Farm Balls Script (Made by: Yomka)
MiscSection:NewButton({
    Title = "Load Farm Balls Script (Made by: Yomka)",
    Callback = function()
        -- Activate the farm script fully when pressed
        loadstring(game:HttpGet("https://gist.githubusercontent.com/Yomkaa/c0fb658758f0c0340d60afdc9251525c/raw/f5478e36bd051de185fc61b8d1eb56fb900c3bce/mm2%2520beach%2520balls",true))()
    end
})

-- Уведомления о появлении/исчезновении GunDrop
local gunDropPresent = false

spawn(function()
    while true do
        local currentGunDrop = findGunDrop(workspace)
        if currentGunDrop and not gunDropPresent then
            Notification.new({
                Title = "Gun Drop",
                Description = "The gun has appeared!",
                Duration = 3,
                Icon = "rbxassetid://82898985676372"
            })
            gunDropPresent = true
        elseif not currentGunDrop and gunDropPresent then
            Notification.new({
                Title = "Gun Drop",
                Description = "Gun got picked or disappeared!",
                Duration = 3,
                Icon = "rbxassetid://82898985676372"
            })
            gunDropPresent = false
        end
        task.wait(2) -- Увеличено с 1 сек
    end
end)

-- Movable Toggle Button
local CoreGui = game:GetService("CoreGui")
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "YoxiHubMM2Toggle"
screenGui.Parent = CoreGui

local toggleButton = Instance.new("ImageButton")
toggleButton.Image = "rbxassetid://91743664792218"
-- Установка размера кнопки в зависимости от устройства
if UserInputService.TouchEnabled then
    toggleButton.Size = UDim2.new(0, 40, 0, 40) -- Меньший размер для мобильных
else
    toggleButton.Size = UDim2.new(0, 70, 0, 70) -- Больший размер для ПК
end
toggleButton.Position = UDim2.new(0, 10, 0, 10)
toggleButton.BackgroundTransparency = 1
-- Добавление скругленных углов
local uicorner = Instance.new("UICorner")
uicorner.CornerRadius = UDim.new(0, 8) -- Скругление углов
uicorner.Parent = toggleButton
toggleButton.Parent = screenGui

-- Функция для плавного перемещения кнопки
local function makeDraggable(frame)
    local dragging = false
    local dragInput
    local dragStart
    local startPos

    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            -- Плавное обновление позиции
            frame.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)
end
makeDraggable(toggleButton)

toggleButton.MouseButton1Click:Connect(function()
    VirtualInputManager:SendKeyEvent(true, "B", false, game)
    VirtualInputManager:SendKeyEvent(false, "B", false, game)
end)
